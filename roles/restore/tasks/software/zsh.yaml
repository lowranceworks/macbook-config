---
- name: Zsh | Check if ~/.zshrc exists
  stat:
    path: ~/.zshrc
  register: zshrc

- name: Zsh | Check if $ZSH folder exists
  stat:
    path: "{{ lookup('env', 'ZSH') | default('~/.oh-my-zsh', true) }}"
  register: oh_my_zsh_home_dir

# - name: Save a copy of the existing .zshrc configuration
#   ansible.builtin.copy:
#     src: ~/.zshrc
#     dest: ~/.zshrc-backup-{{ lookup('pipe', 'date +%Y%m%dT%H%M%S') }}
#     directory_mode: yes
#     remote_src: no
#   when: zshrc.stat.exists

- name: Zsh | copy .zsh* configuration files
  copy:
    src: "{{ project_path }}/files/Home/{{ item }}"
    dest: "~/{{ item }}"
    remote_src: no
    owner: "{{ ansible_facts['user_id'] }}"
    mode: "0755"
  loop:
    - .zshrc
    - .zshenv

- name: Zsh | Push ~/.zshenv
  copy:
    src: "{{ project_path }}/files/Home/.zshenv"
    dest: "~/.zshenv"
    owner: "{{ lookup('env', 'USER') }}"
    mode: "0644"

- name: Zsh | Set ~/.zshrc
  copy:
    src: "{{ project_path }}/files/Home/.zshrc"
    dest: "~/.zshrc"
    owner: "{{ lookup('env', 'USER') }}"
    mode: "0644"

- name: Zsh | Oh-My-Zsh | Check if ~/.oh-my-zsh directory exists
  stat:
    path: ~/.oh-my-zsh/
  register: oh_my_zsh_home_dir

- name: Zsh | Oh-My-Zsh | Set *.zsh files
  copy:
    src: "{{ project_path }}/files/Home/.oh-my-zsh/{{ item }}"
    dest: "~/.oh-my-zsh/{{ item }}"
    owner: "{{ ansible_facts['user_id'] }}"
    mode: "0755"
  loop:
    - aliases.zsh

- name: Zsh | Oh-My-Zsh | Set *.zsh files
  copy:
    src: "{{ project_path }}/files/Home/{{ item }}"
    dest: "~/.oh-my-zsh/{{ item }}"
    remote_src: no
    owner: "{{ ansible_facts['user_id'] }}"
    mode: "0755"
  loop:
    - aliases.zsh
  when: oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Set oh-my-zsh.sh
  fetch:
    src: "{{ project_path }}/files/Home/.oh-my-zsh/oh-my-zsh.sh"
    dest: "~/.oh-my-zsh/oh-my-zsh.sh"
    flat: yes
    mode: "0755"
  when: oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Install zsh-autosuggestions
  git:
    repo: "https://github.com/zsh-users/zsh-autosuggestions.git"
    dest: "{{ lookup('env', 'ZSH_CUSTOM') | default(lookup('env', 'HOME') + '/.oh-my-zsh/custom', true) }}/plugins/zsh-autosuggestions"
  when: oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Install zsh-syntax-highlighting
  git:
    repo: "https://github.com/zsh-users/zsh-syntax-highlighting.git"
    dest: "{{ lookup('env', 'ZSH_CUSTOM') | default(lookup('env', 'HOME') + '/.oh-my-zsh/custom', true) }}/plugins/zsh-syntax-highlighting"
  when: oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Clone project
  git:
    repo: "https://github.com/ohmyzsh/ohmyzsh.git"
    dest: "/tmp/oh-my-zsh/"
    force: true
  when: not oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Execute oh-my-zsh installation script
  command: /tmp/oh-my-zsh/tools/install.sh
  when: not oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Powerlevel10k | Install powerlevel10k theme
  git:
    repo: "https://github.com/romkatv/powerlevel10k.git"
    dest: "{{ lookup('env', 'ZSH_CUSTOM') or lookup('env', 'HOME') + '/.oh-my-zsh/custom' }}/themes/powerlevel10k"
    depth: 1
  when: oh_my_zsh_home_dir.stat.exists

- name: Zsh | Oh-My-Zsh | Powerlevel10k | Set .p10k.zsh configuration file
  copy:
    src: "{{ project_path }}/files/Home/.p10k.zsh"
    dest: "~/.p10k.zsh"
    remote_src: no
    owner: "{{ ansible_facts['user_id'] }}"
    mode: "0755"
    directory_mode: "0755"

- name: Zsh | Oh-My-Zsh | Powerlevel10k | Ensure fonts directory exists
  ansible.builtin.file:
    path: "~/Library/fonts"
    mode: "0755"
    state: directory

- name: Zsh | Oh-My-Zsh | Powerlevel10k | Set recommended fonts
  ansible.builtin.copy:
    src: "{{ project_path }}/files/Home/Library/fonts/{{ item }}"
    dest: "~/Library/fonts/{{ item }}"
    mode: "0644"
  become: false
  loop:
    - MesloLGS NF Bold Italic.ttf
    - MesloLGS NF Bold.ttf
    - MesloLGS NF Italic.ttf
    - MesloLGS NF Regular.ttf

