- name: Check if Inkdrop is installed with Homebrew
  ansible.builtin.command: brew list --cask
  register: brew_list
  changed_when: false

- name: Inkdrop | Install Inkdrop with homebrew
  community.general.homebrew:
    name: inkdrop
    state: present
  when: "'inkdrop' not in brew_list.stdout"

- name: Inkdrop | Ensure directory exists
  tags: inkdrop
  file:
    path: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop"
    state: directory
    mode: "0755"

- name: Inkdrop | Set initialization configuration
  copy:
    src: "{{ project_path }}/files/Home/Library/Application Support/inkdrop/init.js"
    dest: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/init.js"

- name: Inkdrop | Set keybindings
  copy:
    src: "{{ project_path }}/files/Home/Library/Application Support/inkdrop/keymap.cson"
    dest: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/keymap.cson"

- name: Inkdrop | Ensure packages directory exists
  file:
    path: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/packages"
    state: directory
    mode: "0755"

- name: Inkdrop | Create symlink for Inkdrop ipm binary
  become: yes
  ansible.builtin.file:
    src: /Applications/Inkdrop.app/Contents/Resources/app/ipm/bin/ipm
    dest: /usr/local/bin/ipm
    state: link

- name: Inkdrop | Read packages.txt
  ansible.builtin.slurp:
    src: "{{ project_path }}/files/Home/Library/Application Support/inkdrop/packages.txt"
  register: packages_raw

- name: Inkdrop | Get list of installed packages
  ansible.builtin.shell:
    cmd: ls ~/Library/Application\ Support/inkdrop/packages/
  register: installed_packages_raw
  changed_when: False

- name: Inkdrop | Convert raw installed packages list to fact
  set_fact:
    installed_packages_list: "{{ installed_packages_raw.stdout_lines }}"

- name: Inkdrop | Convert packages.txt list to fact
  set_fact:
    packages_list: "{{ packages_raw['content'] | b64decode | split('\n') }}"

- name: Inkdrop | Determine uninstalled packages
  set_fact:
    uninstalled_packages: "{{ packages_list | difference(installed_packages_list) }}"

- name: Inkdrop | Install packages using ipm
  ansible.builtin.command:
    cmd: ipm install {{ item }}
  loop: "{{ uninstalled_packages }}"
  when: item != ''

# - name: Inkdrop | Check if 'config.cson' file exists
#   stat:
#     path: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/config.cson"
#   register: config_file_status

# - name: Inkdrop | Create 'config.cson' file
#   file:
#     path: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/config.cson"
#     state: touch
#     mode: '0644'
#   when: not config_file_status.stat.exists

- name: "Inkdrop | Set config.cson"
  copy:
    src: "{{ project_path }}/files/Home/Library/Application Support/inkdrop/config.cson"
    dest: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/config.cson"

- name: Inkdrop | Check if 'server' configuration exists
  shell: grep -Fq 'server:' "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/config.cson"
  register: server_config_check
  failed_when: false
  changed_when: false

- name: Inkdrop | Add 'server' configuration if it doesn't exist
  blockinfile:
    path: "{{ lookup('env', 'HOME') }}/Library/Application Support/inkdrop/config.cson"
    insertafter: EOF
    block: |
      server:
        auth:
          password: "bar"
          username: "foo"
        bindAddress: "127.0.0.1"
        enabled: true
        port: 19840
  when: server_config_check.rc != 0
